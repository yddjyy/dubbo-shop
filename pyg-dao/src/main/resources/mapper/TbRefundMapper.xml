<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ingxx.mapper.TbRefundMapper">
  <resultMap id="BaseResultMap" type="top.ingxx.pojo.TbRefund">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_item_id" jdbcType="VARCHAR" property="orderItemId" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="refund_type" jdbcType="VARCHAR" property="refundType" />
    <result column="refund_reason" jdbcType="VARCHAR" property="refundReason" />
    <result column="refund_amount" jdbcType="VARCHAR" property="refundAmount" />
    <result column="refund_instruction" jdbcType="VARCHAR" property="refundInstruction" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="reply" jdbcType="VARCHAR" property="reply" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_item_id, out_trade_no, status, start_time, end_time, refund_type, refund_reason, 
    refund_amount, refund_instruction, images, reply, seller_id
  </sql>
  <select id="selectByExample" parameterType="top.ingxx.pojo.TbRefundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_refund
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_refund
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="top.ingxx.pojo.TbRefundExample">
    delete from tb_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.ingxx.pojo.TbRefund">
    insert into tb_refund (id, order_item_id, out_trade_no, 
      status, start_time, end_time, 
      refund_type, refund_reason, refund_amount, 
      refund_instruction, images, reply, 
      seller_id)
    values (#{id,jdbcType=VARCHAR}, #{orderItemId,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{refundType,jdbcType=VARCHAR}, #{refundReason,jdbcType=VARCHAR}, #{refundAmount,jdbcType=VARCHAR}, 
      #{refundInstruction,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, #{reply,jdbcType=VARCHAR}, 
      #{sellerId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.ingxx.pojo.TbRefund">
    insert into tb_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderItemId != null">
        order_item_id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="refundReason != null">
        refund_reason,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="refundInstruction != null">
        refund_instruction,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="reply != null">
        reply,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderItemId != null">
        #{orderItemId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null">
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=VARCHAR},
      </if>
      <if test="refundInstruction != null">
        #{refundInstruction,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.ingxx.pojo.TbRefundExample" resultType="java.lang.Long">
    select count(*) from tb_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_refund
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderItemId != null">
        order_item_id = #{record.orderItemId,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundType != null">
        refund_type = #{record.refundType,jdbcType=VARCHAR},
      </if>
      <if test="record.refundReason != null">
        refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.refundInstruction != null">
        refund_instruction = #{record.refundInstruction,jdbcType=VARCHAR},
      </if>
      <if test="record.images != null">
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.reply != null">
        reply = #{record.reply,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_refund
    set id = #{record.id,jdbcType=VARCHAR},
      order_item_id = #{record.orderItemId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      refund_type = #{record.refundType,jdbcType=VARCHAR},
      refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      refund_amount = #{record.refundAmount,jdbcType=VARCHAR},
      refund_instruction = #{record.refundInstruction,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      reply = #{record.reply,jdbcType=VARCHAR},
      seller_id = #{record.sellerId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.ingxx.pojo.TbRefund">
    update tb_refund
    <set>
      <if test="orderItemId != null">
        order_item_id = #{orderItemId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null">
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=VARCHAR},
      </if>
      <if test="refundInstruction != null">
        refund_instruction = #{refundInstruction,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="reply != null">
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.ingxx.pojo.TbRefund">
    update tb_refund
    set order_item_id = #{orderItemId,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      refund_type = #{refundType,jdbcType=VARCHAR},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      refund_amount = #{refundAmount,jdbcType=VARCHAR},
      refund_instruction = #{refundInstruction,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      reply = #{reply,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>